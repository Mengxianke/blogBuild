import{_ as d,c as e,aO as a,o as r}from"./chunks/framework.DEWO2zTc.js";const f=JSON.parse('{"title":"WeakRef/WeakSet/WeakMap","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/jsFundation/memory/memoryManagement/index.md","filePath":"knowledge/jsFundation/memory/memoryManagement/index.md"}'),n={name:"knowledge/jsFundation/memory/memoryManagement/index.md"};function o(i,t,s,l,m,k){return r(),e("div",null,t[0]||(t[0]=[a('<h1 id="weakref-weakset-weakmap" tabindex="-1">WeakRef/WeakSet/WeakMap <a class="header-anchor" href="#weakref-weakset-weakmap" aria-label="Permalink to &quot;WeakRef/WeakSet/WeakMap&quot;">​</a></h1><table tabindex="0"><thead><tr><th>特性</th><th>WeakRef</th><th>WeakMap</th><th>WeakSet</th></tr></thead><tbody><tr><td>存储类型</td><td>单个对象</td><td>键-值对，键必须是对象</td><td>对象集合</td></tr><tr><td>键类型</td><td>不适用</td><td>只能是对象</td><td>只能是对象</td></tr><tr><td>值类型</td><td>对象</td><td>任意类型</td><td>不适用</td></tr><tr><td>键/值是否被强引用</td><td>否（弱引用）</td><td>键强引用，值在键被回收后弱引用</td><td>否（弱引用）</td></tr><tr><td>用途中对象的处理</td><td>提供真正的弱引用，允许对象在生命周期的任意时刻被回收</td><td>存储对象键-值对，在键被回收后也可以回收相应的值</td><td>存储对象集合，在对象不再被引用时可以被回收</td></tr><tr><td>垃圾回收特性</td><td>在对象不再被引用时自动回收</td><td>当键对象被回收后，值对象也会被回收</td><td>在对象不再被引用时自动回收</td></tr><tr><td>主要用途</td><td>高级内存管理，避免内存泄漏</td><td>缓存、对象映射等需要对象键值对的场景</td><td>存储唯一对象的集合，例如跟踪已处理的对象</td></tr><tr><td>API 方法</td><td>deref()</td><td>set(), get(), delete(), has()</td><td>add(), delete(), has()</td></tr><tr><td>键是否唯一</td><td>不适用</td><td>是</td><td>是</td></tr><tr><td>值是否唯一</td><td>是</td><td>否</td><td>是</td></tr><tr><td>可枚举性</td><td>否</td><td>否</td><td>否</td></tr><tr><td>内存管理优势</td><td>减少内存泄漏</td><td>在键被垃圾回收后，自动回收其关联的值</td><td>在对象不再被引用时，自动释放内存</td></tr><tr><td>适用版本</td><td>(ES12)</td><td>(ES6)</td><td>(ES6)</td></tr><tr><td>典型使用场景</td><td>缓存管理、保持对象引用但允许垃圾回收</td><td>缓存、DOM节点映射、存储私有数据</td><td>跟踪唯一对象集合、管理对象生命周期</td></tr><tr><td>内存回收时机</td><td>在对象没有其他引用时可被回收</td><td>在键没有其他引用时，其关联的值可被回收</td><td>在对象没有其他引用时可被回收</td></tr><tr><td>弱引用的特性</td><td>提供真正的弱引用，在对象的生命周期中不影响垃圾回收</td><td>仅在键被回收后才弱引用值</td><td>在对象不再被引用时，自动允许回收</td></tr></tbody></table><h1 id="finalizationregsitry" tabindex="-1">FinalizationRegsitry <a class="header-anchor" href="#finalizationregsitry" aria-label="Permalink to &quot;FinalizationRegsitry&quot;">​</a></h1>',3)]))}const c=d(n,[["render",o]]);export{f as __pageData,c as default};
