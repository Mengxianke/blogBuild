import{_ as e,c as o,aO as t,o as r}from"./chunks/framework.DEWO2zTc.js";const i="/blogBuild/navigation_render_UML.png",n="/blogBuild/designPattern/overlayStatePattern.png",u=JSON.parse('{"title":"OOP面向对象，设计模式，建模","description":"","frontmatter":{},"headers":[],"relativePath":"tech/methodology/programmingParadigm/oop/index.md","filePath":"tech/methodology/programmingParadigm/oop/index.md"}'),d={name:"tech/methodology/programmingParadigm/oop/index.md"};function l(s,a,m,p,c,h){return r(),o("div",null,a[0]||(a[0]=[t('<h1 id="oop面向对象-设计模式-建模" tabindex="-1">OOP面向对象，设计模式，建模 <a class="header-anchor" href="#oop面向对象-设计模式-建模" aria-label="Permalink to &quot;OOP面向对象，设计模式，建模&quot;">​</a></h1><h2 id="建模" tabindex="-1">建模 <a class="header-anchor" href="#建模" aria-label="Permalink to &quot;建模&quot;">​</a></h2><p><img src="'+i+'" alt="An image"></p><h2 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to &quot;设计模式&quot;">​</a></h2><p>生成器设计模式:</p><p>工厂方法设计模式:</p><p>渲染物状态设计模式:<br><img src="'+n+'" alt="An image"></p><h2 id="面向对象的solid原则" tabindex="-1">面向对象的SOLID原则 <a class="header-anchor" href="#面向对象的solid原则" aria-label="Permalink to &quot;面向对象的SOLID原则&quot;">​</a></h2>',8)]))}const _=e(d,[["render",l]]);export{u as __pageData,_ as default};
