import{_ as t,c as r,j as e,a,o as i}from"./chunks/framework.DEWO2zTc.js";const x=JSON.parse('{"title":"源码学习","description":"","frontmatter":{},"headers":[],"relativePath":"learning/index.md","filePath":"learning/index.md"}'),o={name:"learning/index.md"};function s(d,n,l,c,p,m){return i(),r("div",null,n[0]||(n[0]=[e("h1",{id:"源码学习",tabindex:"-1"},[a("源码学习 "),e("a",{class:"header-anchor",href:"#源码学习","aria-label":'Permalink to "源码学习"'},"​")],-1),e("p",null,[a("学习源码不是为了造轮子，更不是为了学习源码而学习源码。"),e("br"),a(" 学习源码之前需要有明确的目标和意义。我们为什么学习源码，源码能给我们带来什么。 此系列与个人知识库中的知识领域划分有密切的关系。个人的知识库，将个人的知识体系划分为如下板块， 编程范式，异步控制，前端模块化，通信于通信协议，架构。 这也是个人的当下的成长的脉络。 在源码中寻找这些知识体系，从这些维度上去学习优秀的三方库/工程的源码。 因此这些文章的切入角度也是跟个人的知识库之间有着千丝万缕的联系。 学习源码的目的，更多的是反哺于项目，在项目中运用，在源码中学习，循环往复，形成一个良好的循环。 慢慢的，个人的知识的广度，深度，以及运用能力会得到一定的提升。 此外，在梳理知识点的过程中，能把因果逻辑讲明白，说清楚，有条理，不过分拘泥于细节，也是对个人表达，表述能力的一个挑战。 为了做到这点，表现形式上也采用文字，代码片段，图表，UML类图，时序图，架构图等多种表现手段。 在学习的过程中尽量思考，为什么这些三方库/工程要这么来设计，这么来做，这往往要比怎么做重要的多。")],-1)]))}const _=t(o,[["render",s]]);export{x as __pageData,_ as default};
