import{_ as e,c as r,a1 as t,o}from"./chunks/framework.DTJoDxpO.js";const i="/blogBuild/network/transportLayer.png",n="/blogBuild/network/TCPSegment.png",l="/blogBuild/network/networkLayer.png",h="/blogBuild/network/IP.png",d="/blogBuild/network/IPAddress.png",s="/blogBuild/network/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81%E8%AE%A1%E7%AE%97%E5%99%A8.png",c="/blogBuild/network/router.png",f=JSON.parse('{"title":"七层网络模型","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/network/OSIModel/index.md","filePath":"knowledge/network/OSIModel/index.md"}'),p={name:"knowledge/network/OSIModel/index.md"};function m(u,a,P,b,k,g){return o(),r("div",null,a[0]||(a[0]=[t('<h1 id="七层网络模型" tabindex="-1">七层网络模型 <a class="header-anchor" href="#七层网络模型" aria-label="Permalink to &quot;七层网络模型&quot;">​</a></h1><h1 id="tcp-ip-网络模型" tabindex="-1">TCP/IP 网络模型 <a class="header-anchor" href="#tcp-ip-网络模型" aria-label="Permalink to &quot;TCP/IP 网络模型&quot;">​</a></h1><h2 id="应用层" tabindex="-1">应用层 <a class="header-anchor" href="#应用层" aria-label="Permalink to &quot;应用层&quot;">​</a></h2><h2 id="传输层" tabindex="-1">传输层 <a class="header-anchor" href="#传输层" aria-label="Permalink to &quot;传输层&quot;">​</a></h2><p><img src="'+i+'" alt="An image"></p><h3 id="传输协议" tabindex="-1">传输协议 <a class="header-anchor" href="#传输协议" aria-label="Permalink to &quot;传输协议&quot;">​</a></h3><h4 id="udp结构" tabindex="-1">UDP结构 <a class="header-anchor" href="#udp结构" aria-label="Permalink to &quot;UDP结构&quot;">​</a></h4><h4 id="tcp结构" tabindex="-1">TCP结构 <a class="header-anchor" href="#tcp结构" aria-label="Permalink to &quot;TCP结构&quot;">​</a></h4><p><img src="'+n+'" alt="An image"></p><h3 id="tcp与udp的差别" tabindex="-1">TCP与UDP的差别 <a class="header-anchor" href="#tcp与udp的差别" aria-label="Permalink to &quot;TCP与UDP的差别&quot;">​</a></h3><h3 id="通过wireshark网络抓包看tcp" tabindex="-1">通过WireShark网络抓包看TCP <a class="header-anchor" href="#通过wireshark网络抓包看tcp" aria-label="Permalink to &quot;通过WireShark网络抓包看TCP&quot;">​</a></h3><h2 id="网络层" tabindex="-1">网络层 <a class="header-anchor" href="#网络层" aria-label="Permalink to &quot;网络层&quot;">​</a></h2><p><img src="'+l+'" alt="An image"></p><h3 id="ip协议-internet-protocol" tabindex="-1">IP协议 Internet Protocol <a class="header-anchor" href="#ip协议-internet-protocol" aria-label="Permalink to &quot;IP协议 Internet Protocol&quot;">​</a></h3><p><img src="'+h+'" alt="An image"></p><h3 id="寻址" tabindex="-1">寻址 <a class="header-anchor" href="#寻址" aria-label="Permalink to &quot;寻址&quot;">​</a></h3><h4 id="ip地址" tabindex="-1">IP地址 <a class="header-anchor" href="#ip地址" aria-label="Permalink to &quot;IP地址&quot;">​</a></h4><p><img src="'+d+'" alt="An image"><img src="'+s+'" alt="An image"></p><h4 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h4><p><img src="'+c+'" alt="An image"></p><h2 id="网路接口" tabindex="-1">网路接口 <a class="header-anchor" href="#网路接口" aria-label="Permalink to &quot;网路接口&quot;">​</a></h2><h1 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h1><ol><li>图解网络: <a href="https://xiaolincoding.com/network/" target="_blank" rel="noreferrer">https://xiaolincoding.com/network/</a></li><li></li><li></li></ol>',23)]))}const x=e(p,[["render",m]]);export{f as __pageData,x as default};
