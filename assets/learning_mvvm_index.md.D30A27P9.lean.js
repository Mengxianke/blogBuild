import{_ as n,c as t,j as e,a as r,o}from"./chunks/framework.DEWO2zTc.js";const V=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"learning/mvvm/index.md","filePath":"learning/mvvm/index.md"}'),d={name:"learning/mvvm/index.md"};function i(l,a,s,m,c,p){return o(),t("div",null,a[0]||(a[0]=[e("h1",{id:"概述",tabindex:"-1"},[r("概述 "),e("a",{class:"header-anchor",href:"#概述","aria-label":'Permalink to "概述"'},"​")],-1),e("p",null,"MVVM架构是现代框架采用的一种架构。 MVVM中的M代表Model，即为数据模型。 V代表View视图。VM是ViewModel。 在ViewModel中，框架负责将Model数据的变化同步到视图上。视图的变化同步到Model中。 本篇章，分析前端框架的ViewModel层是如何实现的。阅读和分析部分源码，学习其中的哲学思想。",-1)]))}const f=n(d,[["render",i]]);export{V as __pageData,f as default};
