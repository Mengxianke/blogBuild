import{_ as t,c as l,aO as r,o as i}from"./chunks/framework.DEWO2zTc.js";const a="/blogBuild/network/https4waves2.png",n="/blogBuild/network/https4waves.png",g=JSON.parse('{"title":"HTTPS介绍","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/network/https/index.md","filePath":"knowledge/network/https/index.md"}'),o={name:"knowledge/network/https/index.md"};function s(p,e,c,d,h,m){return i(),l("div",null,e[0]||(e[0]=[r('<h1 id="https介绍" tabindex="-1">HTTPS介绍 <a class="header-anchor" href="#https介绍" aria-label="Permalink to &quot;HTTPS介绍&quot;">​</a></h1><h1 id="https四次握手" tabindex="-1">HTTPS四次握手 <a class="header-anchor" href="#https四次握手" aria-label="Permalink to &quot;HTTPS四次握手&quot;">​</a></h1><p>通过非对称加密手段，加密公钥。 客户端和服务端生成公钥，需要客户端随机数Client Random, 服务端随机数(Server Random), PreMaster. 因此四次握手，需要传递这些信息。 TLS四次挥手 <img src="'+a+'" alt="An image"> TLS第一次握手: 客户端发送Clinet Hello消息:</p><ol><li>客户端TLS版本号</li><li>支持的加密套件列表</li><li>客户端生成的随机数</li></ol><p>TLS第二次握手 服务端收到客户端的Client Hello后，回复Server Hello</p><ol><li>服务端确认支持客户端的TLS版本</li><li>服务器从加密套件中选出一个最合适的加密组合(Cipher Suite)</li><li>服务端生成的随机数 随后，服务器会向客户端发送数字证书</li><li>包含着非对称加密的公钥, 服务端留有非对称加密的私钥。 客户端用公钥加密，服务端私钥解密。</li><li></li></ol><p>Server Hello Done</p><p>TLS第三次握手 对证书内容进行验证。是否被篡改。验证通过后, 客户端生成随机数PreMaster, 通过服务器的公钥进行加密，将随机数发送给服务端 客户端用三个随机数，Client Random, Server Random, PreMaster生成对称加密的密钥: Master Secrete。发送Change Cipther Spec, 通知服务端开始用对称加密进行通信。</p><p>TLS第四次握手 服务端此时也拥有这三个随机数，Client Random, Server Random, PreMaster， 生成同样的对称加密的密钥。将计算的结果通过Secrete。发送Change Cipther Spec发回。</p><p>密钥传递过程和流程</p><ol><li>clinet Hello -- tls, client random, cipher suites</li><li>server Hello -- tls, server random, ciphter suites</li><li>certificate -- certificate(public key)</li><li>server Hello done</li><li>client key exchange -- premaster (encreypted by public key)</li><li>change cipher spec -- master secret</li><li>encrypted handshake message(finished)</li><li>change cipher spec -- premaster (decrypt premaster by privatekey)</li><li>encrypted handshake emssage <img src="'+n+'" alt="An image"></li></ol><p>参考:</p><ol><li><a href="https://blog.csdn.net/ArtAndLife/article/details/114240424" target="_blank" rel="noreferrer">https://blog.csdn.net/ArtAndLife/article/details/114240424</a></li><li><a href="https://cloud.tencent.com/developer/article/1680787" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1680787</a></li></ol>',13)]))}const k=t(o,[["render",s]]);export{g as __pageData,k as default};
